/* DO NOT EDIT: File is autogenerated */
package <%= object_type.schema.java.package %>;

import javax.annotation.Generated;
import javax.persistence.*;
import javax.validation.constraints.*;

@Generated( "Domgen" )
@SuppressWarnings( { "UnusedDeclaration" } )
<% if not object_type.jpa.queries.empty? %>@NamedQueries( value = {
<%= object_type.jpa.queries.collect { |q| "  @NamedQuery( name = \"#{q.fully_qualified_name}\", query = \"#{q.query_string}\" )" }.join(",\n") %>
} )<% end %>
@Access( AccessType.FIELD )
@Entity(name = "<%= object_type.name %>")<% if !object_type.abstract? %>
@Table( name = "<%= object_type.sql.table_name %>",
        schema = "<%= object_type.schema.sql.schema %>",
        uniqueConstraints = {<%=
  object_type.attributes.select{|a|a.unique?}.collect{|a|
  "@UniqueConstraint( columnNames = {\"#{a.sql.column_name}\"})"
  }.join(",\n        ")
%>})<%
else %>
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)<%
end
%>
<%= j_class_definition(object_type) %>{
<%= j_declared_fields(object_type) %>
<%= j_declared_relations(object_type) %>
<%= j_declared_attribute_and_relation_accessors(object_type) %>
<%= j_equals_method(object_type) %>
<%= j_to_string_methods(object_type) %>
}
